/***
 *  Platypus: Page Layout and Typesetting Software (free at platypus.pz.org)
 *
 *  Platypus is (c) Copyright 2009 Pacific Data Works LLC. All Rights Reserved.
 *  Licensed under Apache License 2.0 (http://www.apache.org/licenses/LICENSE-2.0.html)
 */

// Tests of listing file process and output

if( ! args ) {
    println( "Error! Missing argument. " + "Syntax: thisfile.groovy  working-dir  report-Filename" )
    return
}

workingDir = args[0]
def File resultsFile = new File( args[1] )

def platypusHome = System.getenv( "PLATYPUS_HOME" )
if( platypusHome == null ) {
    logFailure( "Error: PLATYPUS_HOME not defined" )
    return
}

jarFile = platypusHome + "\\target\\jar\\Platypus.jar"

def String javaCall = "java -jar " + jarFile  + " " +
                      "d:\\dev\\platypus\\testdata\\macros.txt " +
                      workingDir +
                      "\\macros.html" + 
                      " format -listing "
// println "Actual call: " + javaCall

String fileContents = null

// --- run the tests --- //
int count = 1

resultsFile.append( copyrightString( count++, javaCall ) + "[]\n" )
//resultsFile.append( commandLineException( count++ ) + "[]\n" )
resultsFile.append( outputFile( count++, javaCall ) + "[]\n" )
resultsFile.append( validateHtmlInListingFile( count++ ) + "[]\n" ) 

println( --count + " test(s) run" )

return

//===== TESTS =====//

/**
 * Test written due to a defect that cause an ArrayIndexOutOfBoundsException when the
 * -verbose or -vverbose options are specified on the command line before the -format listing
 * arguments.
 */
 def String commandLineException( int testNbr )
 {
	def workingDir = "d:\\dev\\platypus\\platypus\\target\\jar" 
    def String describe = "commandLineException (for -verbose/--verbose)"
	def String javaCall = "java -jar " + 
			//			jarFile  + 
					  System.getenv( "PLATYPUS_HOME" ) + 
					  "\\target\\jar\\Platypus.jar " +
                      "d:\\dev\\platypus\\testdata\\macros.txt " +
                      workingDir +
                      "\\macros.html" + 
					  " -vverbose" +
                      " format -listing "
	println( "javaCall: " + javaCall )
    def proc = javaCall.execute()
    def err = proc.err.text
	println( "err: " + err )
    if( err.contains( "Exception" ))
		 return( "Failure: " + describe + ": " + "Exception generated by placement of -vverbose option" )
    else
        return( getSuccessMsg( describe ))
 }
 
/**
 * Verify that the copyright string appears even when no command line option is specified
 */
def String copyrightString( int testNbr, String javaCall )
{
    def String describe = "copyrightString"
    def proc = javaCall.execute()
    def output = proc.in.text

    if( ! output.contains( "(c) Copyright 2006-0" ) ||
        ! output.contains( "Pacific Data Works LLC. All Rights Reserved." ))
        return( getFailureMsg( describe, "Missing or incomplete copyright string" ))
    //    return( "Failure: " + describe + ": " + "Missing or incomplete copyright string" )
    else
        return( getSuccessMsg( describe ))
}

/**
 * Verify that output listing file exists. And when it does, copy the contents into a
 * string, entitled fileContents, which is used in subsequent tests. So, for this class,
 * test order is important.
 */
def String outputFile( int testNbr, String javaCall )
{
    def String describe = "basicStructureOfListingFile"
    def String outputFileName =  workingDir + "\\macros.html"

    File listingFile = new File( outputFileName )
    if( ! listingFile.exists() )
        return( getFailureMsg( describe, "Output listing file not found/created." ))
    else
        fileContents = new File( outputFileName ).text
    return( getSuccessMsg( describe ))
}

/**
 * Validate that the basic elements of HTML are present (in matched tags) and
 * that there is a comment stating that the file was created by Platypus.
 */
def String validateHtmlInListingFile( int testNbr )
{
    def String describe = "validateHtmlInListingFile"

    if( fileContents == null )
        return( getFailureMsg( describe, "no Listing file found" ))

    if( ! fileContents.contains( "<HTML>" ) ||
        ! fileContents.contains( "</HTML" ) )
        return( getFailureMsg( describe, "Output listing missing paired HTML tags"))
    else
    if( ! fileContents.contains( "<HEAD>" ) ||
        ! fileContents.contains( "</HEAD" ) )
        return( getFailureMsg( describe, "Output listing missing paired HEAD tags"))
    else
    if( ! fileContents.contains( "<TITLE>" ) ||
        ! fileContents.contains( "</TITLE" ) )
        return( getFailureMsg( describe, "Output listing missing paired TITLE tags"))
    else
    if( ! fileContents.contains( "<BODY>" ) ||
        ! fileContents.contains( "</BODY" ) )
        return( getFailureMsg( describe, "Output listing missing paired BODY tags"))
    else
    if( ! fileContents.contains( "<!-- Created by Platypus v." ) ||
        ! fileContents.contains( "(available at http://platypus.pz.org)-->" ) )
        return( getFailureMsg( describe, "Output listing not created by Platypus"))
    else
        return( getSuccessMsg( describe ))
}

//================================================================================================//

def String getFailureMsg( String testName, String errMsg )
{
    return( "[+b]Failure:[-b] " + testName + ": " + errMsg )
}

def String getSuccessMsg( String testName )
{
    return( "Passed:  " + testName )
}
