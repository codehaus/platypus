<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	Platypus: Page Layout and Typesetting Software (free at platypus.pz.org)
 
	Platypus is (c) Copyright 2006-09 Pacific Data Works LLC. All Rights Reserved.
	Licensed under Apache License 2.0 (http://www.apache.org/licenses/LICENSE-2.0.html)

	This is the full Platypus test file, that builds all the
     the plugins and tests them.

     Note: this is only for testing. To build the productized
	version, use the Ant file, fullplatybuild.xml

	2009-07-17  alb incomplete, but a start. 
	2009-07-18  alb  unit tests, functional tests work and generate valid reports.
	2009-10-01  alb added ..\ to all files to reflect new project organization
-->

<project name="platypus-build" default="all" basedir=".">
	<property name="build.dir" 				location="..\target\" />
	<property name="classes.dir" 			location="${build.dir}\classes\" />
	<property name="config.dir"				location="..\config\" />
    <property name="docs.dir"       		location="..\target\docs\" />
    <property name="fonts.dir"      		location="..\fonts\" />
	<property name="func.tests.src.dir"		location="..\src\functionalTests\" />
	<property name="jar.dir"				location="${build.dir}\jar"/>
	<property name="src.dir" 				location="..\src\main\java"/>
    <property name="src.pdf.plugin.dir"     location="${src.dir}\org\pz\platypus\plugin\pdf"/>
    <property name="src.listing.plugin.dir" location="${src.dir}\org\pz\platypus\plugin\listing"/>
	<property name="src.test.dir"   		location="..\src\test\java" />
	<property name="test.report.dir" 		location="..\target\test-reports" />
	<property name="vendor.libs"    		location="..\lib\" />
    <property name="vendor.lib.dir" 		location="${build.dir}\jar\lib" />
	
	<property name="version"				value="0.2.0 RC 0" />
	<property name="message" 				value="Buid Platypus for Release" />

    <path id="project.classpath">
        <pathelement location="${classes.dir}"/>
        <fileset dir="${vendor.libs}">
            <include name="*.jar"/>
        </fileset>
    </path>
	
	<path id="groovy.classpath">
		<pathelement location="C:\Tools\Groovy\Groovy-1.6.3\lib\groovy-1.6.3.jar" />
	</path>
	
	<taskdef name="groovy"
			 classname = "org.codehaus.groovy.ant.Groovy"
		     classpathref = "groovy.classpath" />
		<!-- classpathref = ".;C:\Tools\Groovy\Groovy-1.6.3;C:\Tools\Groovy\Groovy-1.6.3\lib\groovy-1.6.3.jar" > -->


<target name="all"
        depends="compile-prep,
                 compile,
                 compile-listing-plugin,
                 compile-pdf-plugin,
				 compile-unit-tests,
				 unit-test"
        description="Run all tests">
	<echo> ${message} </echo>
</target>

<target name="compile-prep" description="Clean compilation output directory" >
	<mkdir dir="${classes.dir}"/>
    <delete dir="${classes.dir}\org" />
</target>

<target name="compile" description="Compile with Java 6">                         
	<javac srcdir="${src.dir}"
		   destdir="${classes.dir}"
		   debug="on">
		   <classpath refid="project.classpath" />
	</javac>
</target>

<target name="compile-listing-plugin" depends="compile" description="Compile listing plug-in with Java 6">
	<javac srcdir="${src.listing.plugin.dir}"
		   destdir="${classes.dir}"
		   debug="on">
		   <classpath refid="project.classpath" />
	</javac>
</target>

<target name="compile-pdf-plugin" depends="compile" description="Compile PDF plug-in with Java 6">
	<javac srcdir="${src.pdf.plugin.dir}"
		   destdir="${classes.dir}"
		   debug="on">
		   <classpath refid="project.classpath" />
	</javac>
</target>

<target name="compile-unit-tests" description="Compile unit tests">
	<javac srcdir="${src.test.dir}"
		   destdir="${classes.dir}"
		   debug="on">
		   <classpath refid="project.classpath" />
	</javac>
</target>

<target name="unit-test" depends="compile-unit-tests, compile-prep, compile, compile-listing-plugin, compile-pdf-plugin" description="Run unit tests, create report">
	<delete dir="${test.report.dir}"/>
	<mkdir  dir="${test.report.dir}" />
	
	<junit fork="yes" printsummary="no" haltonfailure="no" showoutput="yes" >
		<formatter type="xml"/>
		<classpath refid="project.classpath" />
		<batchtest fork="yes" todir="${test.report.dir}">
			<fileset dir="${classes.dir}">
				<include name="**/*Test.class"/>				
			</fileset>
		</batchtest>
	</junit>
	
	<junitreport todir="${test.report.dir}">
		<fileset dir="${test.report.dir}">
			<include name="TEST-*.xml" />
		</fileset>
		<report todir="${test.report.dir}\html" />
	</junitreport>	
</target>
	
	<!--
	Runs the functional tests, generated a Platypus file containing the results, 
	then generates a PDF by running Platypus on the results file.
	-->
<target name="functional-tests" description="Run functional tests (in Groovy)" >
	<delete>
		<fileset dir="${jar.dir}" includes="*.platy" />
	</delete>
	
	<exec dir="${func.tests.src.dir}" executable="groovy" os="Windows XP" >
		<arg line="${func.tests.src.dir}\framework.groovy ${func.tests.src.dir}\scripts.txt ${jar.dir} AntFunctionalTests.platy" />
	</exec>
	
	<exec dir="${jar.dir}" executable ="java" os="Windows XP" >
		<arg line="-cp . -jar Platypus.jar ${jar.dir}\AntFunctionalTests.platy ${test.report.dir}\AntFunctionalTests.pdf" />
	</exec>
	
</target>	

</project>
 